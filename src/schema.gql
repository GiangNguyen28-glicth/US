# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CartInput {
  productId: ObjectID!
  quantity: Int!
}

type Category {
  _id: ID!
  child: [Category!]
  code: CategoryEnum!
  level: Float!
  name: String
  parent: Category
  slug: String!
}

enum CategoryEnum {
  HOME
  SPORT
}

input CategoryGetByParentAndLevel {
  categoryId: ObjectID
  level: Int
  parent: ObjectID
}

input CategoryGetOneInput {
  _id: ObjectID!
}

input CategoryInput {
  code: CategoryEnum!
  level: Int
  name: String
  parentId: ObjectID
}

input CreateOrderInput {
  address: String!
  phonenumber: String
  username: String
}

input CreateProductInput {
  category: ObjectID!
  discount: Int
  imgUrl: [String!]
  name: String
  price: Int!
  quantity: Int!
  title: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type District {
  code: Int
  codename: String
  division_type: String
  name: String
  province_code: Int
}

input FilterProduct {
  isDiscount: Boolean
  maxPrice: Int
  minPrice: Int = 0
  name: String
  productId: ObjectID
}

enum FilterStatistics {
  LASTYEAR
  SEVENDAYSAGO
  THIRTYDAYSAGO
  THISYEAR
}

enum GenderEnum {
  FEMALE
  LGBT
  MALE
}

type IJwtPayload {
  _id: String
}

type JwtPayload {
  accessToken: String
  payload: IJwtPayload
  refreshToken: String
  userInfo: User
}

type LineItem {
  product: Product!
  quantity: Float!
  totalPrice: Float!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addItemToCart(input: CartInput!): Boolean!
  createCategory(input: CategoryInput!): Boolean!
  createOrder(input: CreateOrderInput!): Boolean!
  createProduct(input: CreateProductInput!): Boolean!
  createReview(input: ReviewInput!): Boolean!
  deleteItemCart(productId: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  login(input: LoginInput!): JwtPayload!
  register(input: RegisterInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!
  updateItemCart(input: CartInput!): Boolean!
  updateProduct(input: UpdateProduct!, productId: String!): Boolean!
  updateReview(input: ReviewInput!): Boolean!
  updateUser(input: UpdateUserInput!): User!
  uploadFile(file: Upload!): String!
}

"""
A field whose value conforms with the standard mongodb object ID as described here: https://docs.mongodb.com/manual/reference/method/ObjectId/#ObjectId. Example: 5e5677d71bdc2ae76344968c
"""
scalar ObjectID

input OptionFilterProduct {
  filter: FilterProduct
  page: Int
  size: Int
  sort: SortProductEnum
}

type Order {
  _id: ID!
  address: String!
  createAt: DateTime!
  phonenumber: String!
  totalPrice: Float!
  totalQuantity: Float!
  updateAt: DateTime!
  user: User!
  username: String!
}

type Product {
  _id: ID!
  category: Category!
  createAt: DateTime
  discount: Int
  displayPrice: String!
  imgUrl: [String!]!
  name: String
  originalPrice: Float
  price: Float!
  quantity: Int
  rating: Int
  slug: String
  title: String
  updateAt: DateTime
}

type Province {
  code: Int
  codename: String
  name: String
  phone_code: Int
}

type Query {
  averageRating(productId: String!): Float!
  checkExistsReview(productId: String!): Boolean!
  confirmMail(token: String!): Boolean!
  countReview(productId: String!): Float!
  fakeDataProduct: Boolean!
  getCategoryById(input: CategoryGetOneInput!): Category!
  getCategoryByParentIdAndLevel(input: CategoryGetByParentAndLevel!): [Category!]!
  getChildIdCategory(categoryId: String!): [String!]!
  getChildOfCategory(categoryId: String!): Category!
  getDistrict(province_code: Float!): [District!]!
  getListItemCart: [LineItem!]!
  getProductByCategory(categoryId: ObjectID!, page: Float, size: Float): ResultFilter!
  getProductBySlug(slug: String!): Product!
  getProducts(option: OptionFilterProduct!): ResultFilter!
  getProvince: [Province!]!
  getWards(district_code: Float!): [Wards!]!
  refreshToken: JwtPayload!
  resetCache: String!
  searchProduct(search: SearchProductInput!): ResultFilter!
  statistic(input: FilterStatistics!): [User!]!
  statisticOrder(input: FilterStatistics!): [StatisticOrder!]!
  test: String!
}

input RegisterInput {
  confirmpassword: String!
  email: String!
  password: String!
  phonenumber: String
  username: String
}

input ResetPasswordInput {
  code: String!
  confirmpassword: String!
  password: String!
  userId: ObjectID!
}

type ResultFilter {
  listKeyword: [String!]
  results: [Product!]
  totalCount: Int
}

input ReviewInput {
  productId: ObjectID!
  rating: Int!
}

enum RoleEnum {
  ADMIN
  USER
}

input SearchProductInput {
  name: String
  page: Int
  size: Int
}

enum SortProductEnum {
  AZ
  BESTSELLER
  DECREASE_PRICE
  INCREASE_PRICE
  LATEST
  ZA
}

type StatisticOrder {
  date: Int
  month: Int
  totalPrice: Int!
  year: Int
}

input UpdateProduct {
  name: String
  price: Int
  quantity: Int
  rating: Int
}

input UpdateUserInput {
  phonenumber: String
  username: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ID
  address: String
  createAt: DateTime
  email: String
  gender: GenderEnum
  keyword: String
  phonenumber: String
  role: RoleEnum
  slug: String
  updateAt: DateTime
  username: String
}

type Wards {
  code: Int
  codename: String
  district_code: Int
  division_type: String
  name: String
}